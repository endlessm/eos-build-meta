From fc2c737a432843a4201f9d2b69333df7e2d309f9 Mon Sep 17 00:00:00 2001
From: Jian-Hong Pan <jhp@endlessos.org>
Date: Fri, 6 Jun 2025 18:42:34 +0800
Subject: [PATCH 3/3] [Endless] ostree: deploy: Don't try to create symlinks on
 FAT /boot

Code was introduced to make a symlink from /boot/boot to sysroot,
which breaks for us when /boot is FAT (like on PAYG systems)

Instead of using our mock-symlink code here, just avoid writing
the symlink at all, as it's only for u-boot and syslinux' benefit,
neither of which are used in PAYG.

AC: There is no symlink from /boot/boot on PAYG system.

https://phabricator.endlessm.com/T31593
https://phabricator.endlessm.com/T35831
---
 ...t-try-to-create-symlinks-on-FAT-boot.patch | 46 +++++++++++++++++++
 1 file changed, 46 insertions(+)
 create mode 100644 patches/ostree/0003-deploy-Don-t-try-to-create-symlinks-on-FAT-boot.patch

diff --git a/patches/ostree/0003-deploy-Don-t-try-to-create-symlinks-on-FAT-boot.patch b/patches/ostree/0003-deploy-Don-t-try-to-create-symlinks-on-FAT-boot.patch
new file mode 100644
index 000000000..c0df48938
--- /dev/null
+++ b/patches/ostree/0003-deploy-Don-t-try-to-create-symlinks-on-FAT-boot.patch
@@ -0,0 +1,46 @@
+From 3d94e22d20bbfc9447f56420372ef3769f78ea94 Mon Sep 17 00:00:00 2001
+From: Derek Foreman <derek@endlessos.org>
+Date: Mon, 22 Mar 2021 13:31:14 -0500
+Subject: [PATCH 3/3] deploy: Don't try to create symlinks on FAT /boot
+
+Code was introduced to make a symlink from /boot/boot to sysroot,
+which breaks for us when /boot is FAT (like on PAYG systems)
+
+Instead of using our mock-symlink code here, just avoid writing
+the symlink at all, as it's only for u-boot and syslinux' benefit,
+neither of which are used in PAYG.
+
+https://phabricator.endlessm.com/T31593
+---
+ src/libostree/ostree-sysroot-deploy.c | 13 ++++++++++---
+ 1 file changed, 10 insertions(+), 3 deletions(-)
+
+diff --git a/src/libostree/ostree-sysroot-deploy.c b/src/libostree/ostree-sysroot-deploy.c
+index c5c56c51..9c52d738 100644
+--- a/src/libostree/ostree-sysroot-deploy.c
++++ b/src/libostree/ostree-sysroot-deploy.c
+@@ -2311,11 +2311,18 @@ prepare_new_bootloader_link (OstreeSysroot *sysroot, int current_bootversion, in
+   g_assert ((current_bootversion == 0 && new_bootversion == 1)
+             || (current_bootversion == 1 && new_bootversion == 0));
+ 
++  /* Check if we're on a FAT FS, and unable to symlink */
++  gboolean fat = FALSE;
++  glnx_autofd int dest_dir_dfd = -1;
++  if (glnx_opendirat (sysroot->sysroot_fd, "boot", TRUE, &dest_dir_dfd, error))
++    fat = fs_is_fat (dest_dir_dfd);
++
+   /* This allows us to support both /boot on a seperate filesystem to / as well
+    * as on the same filesystem. */
+-  if (TEMP_FAILURE_RETRY (symlinkat (".", sysroot->sysroot_fd, "boot/boot")) < 0)
+-    if (errno != EEXIST)
+-      return glnx_throw_errno_prefix (error, "symlinkat");
++  if (!fat)
++    if (TEMP_FAILURE_RETRY (symlinkat (".", sysroot->sysroot_fd, "boot/boot")) < 0)
++      if (errno != EEXIST)
++        return glnx_throw_errno_prefix (error, "symlinkat");
+ 
+   g_autofree char *new_target = g_strdup_printf ("loader.%d", new_bootversion);
+ 
+-- 
+2.49.0
+
-- 
2.49.0

